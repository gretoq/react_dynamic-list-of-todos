{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onClick","className","map","todo","id","title","completed","isSelectedTodo","classNames","type","TodoFilter","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTods","isLoaded","setIsLoaded","selectedTodo","setSelectedTodo","useEffect","fetchTodos","a","fetchedTodos","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3710ab5d.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId?: number,\n  onClick: (todo: Todo) => void\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, selectedTodoId, onClick }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          // userId,\n          title,\n          completed,\n        } = todo;\n\n        const isSelectedTodo = selectedTodoId === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': isSelectedTodo,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onClick(todo)}\n              >\n                <span className=\"icon\">\n                  {/* 'fa-eye-slash' */}\n                  {/* <i className=\"far fa-eye\" /> */}\n                  <i\n                    className={classNames(\n                      'far',\n                      {\n                        'fa-eye': !isSelectedTodo,\n                      },\n                      {\n                        'fa-eye-slash': isSelectedTodo,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","export const TodoFilter = () => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select data-cy=\"statusSelect\">\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n        />\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api'; // , getUser\n\nexport const App: React.FC = () => {\n  const [todos, setTods] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  // console.log('selectedTodo:', selectedTodo);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const fetchedTodos = await getTodos();\n\n        setTods(fetchedTodos);\n        setIsLoaded(true);\n      } catch (error) {\n        // console.error(error);\n\n        throw new Error(`We have a problem when we have loaded data - ${error}`);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded && <Loader />}\n\n              {isLoaded && (\n                <TodoList\n                  todos={todos}\n                  selectedTodoId={selectedTodo?.id}\n                  onClick={handleTodoSelect}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {false && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}