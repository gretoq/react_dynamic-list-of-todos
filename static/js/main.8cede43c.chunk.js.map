{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoTypeFilter","TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","title","completed","isSelectedTodo","classNames","type","onClick","TodoFilter","React","memo","useState","ALL","todoFilter","setTodoFilter","queryFilter","setQueryFilter","value","onChange","event","target","ACTIVE","COMPLETED","placeholder","titleQuery","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","selectedTodo","onClose","user","setUser","isLoading","setIsLoading","useEffect","fetchUser","a","fetchedUser","Error","href","email","name","App","setTods","isLoaded","setIsLoaded","setSelectedTodo","fetchTodos","fetchedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cede43c.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nenum TodoTypeFilter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const TodoFilter = React.memo(() => {\n  const [\n    todoFilter,\n    setTodoFilter,\n  ] = useState<TodoTypeFilter>(TodoTypeFilter.ALL);\n  const [queryFilter, setQueryFilter] = useState('');\n\n  // console.log('todofilter:', todoFilter);\n  // console.log('queryFilter:', queryFilter);\n\n  const handleSelectFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodoFilter(event.target.value as TodoTypeFilter);\n  };\n\n  const handleQueryFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const titleQuery = event.target.value;\n\n    setQueryFilter(titleQuery);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoFilter}\n            onChange={handleSelectFilter}\n          >\n            <option value={TodoTypeFilter.ALL}>All</option>\n            <option value={TodoTypeFilter.ACTIVE}>Active</option>\n            <option value={TodoTypeFilter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryFilter}\n          onChange={handleQueryFilter}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n});\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId?: number,\n  onSelect: (todo: Todo) => void\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, selectedTodoId, onSelect }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          // userId,\n          title,\n          completed,\n        } = todo;\n\n        const isSelectedTodo = selectedTodoId === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': isSelectedTodo,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  {/* 'fa-eye-slash' */}\n                  {/* <i className=\"far fa-eye\" /> */}\n                  <i\n                    className={classNames(\n                      'far',\n                      {\n                        'fa-eye': !isSelectedTodo,\n                      },\n                      {\n                        'fa-eye-slash': isSelectedTodo,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo,\n  onClose: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onClose }) => {\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const fetchedUser = await getUser(userId);\n\n        setUser(fetchedUser);\n        setIsLoading(false);\n      } catch (error) {\n        // console.error(error);\n\n        throw new Error(`We have a problem when fetch user - ${error}`);\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n              aria-label=\"Close modal\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api'; // , getUser\n\nexport const App: React.FC = () => {\n  const [todos, setTods] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  // console.log('selectedTodo:', selectedTodo);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const fetchedTodos = await getTodos();\n\n        setTods(fetchedTodos);\n        setIsLoaded(true);\n      } catch (error) {\n        // console.error(error);\n\n        throw new Error(`We have a problem when we have loaded data - ${error}`);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded && <Loader />}\n\n              {isLoaded && (\n                <TodoList\n                  todos={todos}\n                  selectedTodoId={selectedTodo?.id}\n                  onSelect={handleTodoSelect}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} onClose={handleCloseModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}